name: generate-model

on:
  schedule: # run every 24 hours
    - cron: '0 0 * * *'

env:
  SCHEMAS: "RC-EDA"
  SCHEMA_VERSION: "1.3"

jobs:
  generate-model:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./models/generator

    env:
      JAVA_POST_PROCESS_FILE: "/usr/bin/clang-format -i"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1

      - name: Generate OpenAPI specs
        working-directory: ./models/csv_parser
        run: |
          pip install -r ./requirements.txt
          IFS=' ' read -ra SCHEMAS_ARRAY <<< "$SCHEMAS"
          for SCHEMA in "${SCHEMAS_ARRAY[@]}"; do
            python3 ./csv_parser.py -s $SCHEMA -v $SCHEMA_VERSION
            mv ./out/$SCHEMA/$SCHEMA.openapi.yaml ../generator/input/$SCHEMA.openapi.yaml
          done

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Setup node env üèó
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: install openapi-generator-cli
        run: npm install -g @openapitools/openapi-generator-cli

      - name: install linter
        run: apt install -y clang-format

      - name: Generate Java classes
        run: |
          npx @openapitools/openapi-generator-cli generate -c ./config/common/common.generator-config.json --skip-validate-spec
          npx @openapitools/openapi-generator-cli generate -c ./config/common/common.wrapper.generator-config.json --skip-validate-spec
          npx @openapitools/openapi-generator-cli generate -c ./config/common/common.distributionElement.generator-config.json --skip-validate-spec

          IFS=' ' read -ra SCHEMAS_ARRAY <<< "$SCHEMAS"
          for SCHEMA in "${SCHEMAS_ARRAY[@]}"; do
            npx @openapitools/openapi-generator-cli generate -c ./config/$SCHEMA/$SCHEMA.generator-config.json --skip-validate-spec
            npx @openapitools/openapi-generator-cli generate -c ./config/$SCHEMA/$SCHEMA.wrapper.generator-config.json --skip-validate-spec
          done

      - name: copy generated classes
        run: |
          rsync -r --ignore-existing ./classes/src/main/java/com/hubsante/model/* ../src/main/java/com/hubsante/model/

      - name: get current date
        id: date
        uses: Kaven-Universe/github-action-current-date-time@v1
        with:
          format: 'YYYY-MM-DD'

      - name: create current date branch
        run: |
          git checkout -b "${{ steps.date.outputs.time }}-generated"
          git diff -- ../src/main/java/com/hubsante/model/ > changes.patch
          git apply changes.patch
          git add -A
          git status

      # about below: the strategy is still unclear to me
      # I think we should commit models/csv_parser/out (json schemas, openapi specs) and models/generator/classes (java classes)
      # we should also commit the full asyncapi spec (not concatenated at this point)

      # but should we commit these files on the same branch as the one we are working on or on a dedicated one ?
      # if it's on a dedicated one, we should add some steps:
      # - override the classes in src/main/java
      # - run gradlew build at least, or gradlew test
      # - if changes, tests must fail because we didn't update the test examples
      # - if new tab, there won't be any test

      # or do we just want to compare the spec files on a weekly basis ?

#      - name: Commit files ‚úÖ
#        run: |
#          git config --local user.email "Model-Generator[bot]@users.noreply.github.com"
#          git config --local user.name "Model-Generator[bot]"
#          git add classes
#          git add ../csv_parser/out
#          # Commit only if needed | Ref.: https://stackoverflow.com/a/8123841/10115198
#          git diff-index --quiet HEAD || git commit -m "‚öôÔ∏è Auto-g√©n√©ration des classes"
#
#      - name: Push changes ‚¨ÜÔ∏è
#        uses: ad-m/github-push-action@master
#        with:
#          branch: ${{ github.head_ref }}