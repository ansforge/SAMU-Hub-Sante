name: build image on release

on:
  release:
    types: [published]

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Grant execute permission for Gradlew
        run: chmod +x hub/dispatcher/gradlew

      - name: Extract release information
        id: extract_info
        run: |
          RELEASE_NAME=${{ github.event.release.name }}
          echo $RELEASE_NAME
          
          if [[ "$RELEASE_NAME" == dispatcher-* ]]; then
            PROJECT="dispatcher"
            VERSION=${RELEASE_NAME#dispatcher-}
          elif [[ "$RELEASE_NAME" == lrm-* ]]; then
            PROJECT="lrm"
            VERSION=${RELEASE_NAME#lrm-}
          else
            echo "Invalid release name prefix. Must be 'dispatcher' or 'lrm'."
            exit 1
          fi
          
          PATTERN="^([0-9]+\.[0-9]+(\.[0-9]+)?)(-[A-Za-z0-9]+)*$"
          if [[ ! "$VERSION" =~ $PATTERN ]]; then
            echo "Invalid version number"
            exit 1
          fi
          
          echo "::set-output name=project::$PROJECT"
          echo "::set-output name=version::$VERSION"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests, build and push dispatcher Docker image
        if: steps.extract_info.outputs.project == 'dispatcher'
        working-directory: hub/dispatcher
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ steps.extract_info.outputs.version }}
        run: |
          ./gradlew jib -Pversion=$TAG --image ghcr.io/${{ github.repository_owner }}/dispatcher:$TAG

      - name: Build and push lrm backend Docker image
        if: steps.extract_info.outputs.project == 'lrm'
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/hub-lrm-back:${{ steps.extract_info.outputs.version }}
          context: ./web/lrm

      - name: Build and push lrm frontend Docker image
        if: steps.extract_info.outputs.project == 'lrm'
        uses: docker/build-push-action@v5
        with:
          push: true
          platforms: linux/amd64
          tags: ghcr.io/${{ github.repository_owner }}/hub-lrm-front:${{ steps.extract_info.outputs.version }}
          context: ./web/lrm/client