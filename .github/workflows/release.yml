name: build image on release

on:
  release:
    types: [published]

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Grant execute permission for Gradlew
        run: chmod +x hub/dispatcher/gradlew

      - name: Extract release information
        id: extract_info
        run: |
          RELEASE_NAME=${{ github.event.release.name }}
          echo $RELEASE_NAME
          
          if [[ "$RELEASE_NAME" == dispatcher-* ]]; then
            PROJECT="dispatcher"
            VERSION=${RELEASE_NAME#dispatcher-}
          elif [[ "$RELEASE_NAME" == lrm-* ]]; then
            PROJECT="lrm"
            VERSION=${RELEASE_NAME#lrm-}
          else
            echo "Invalid release name prefix. Must be 'dispatcher' or 'lrm'."
            exit 1
          fi
          
          PATTERN="^([0-9]+\.[0-9]+\.[0-9]+)(-[A-Za-z]+(-[0-9]+))?$"
          if [[ ! "$VERSION" =~ $PATTERN ]]; then
            echo "Invalid version number"
            exit 1
          elif
          
          echo "::set-output name=project::$PROJECT"
          echo "::set-output name=version::$VERSION"

      - name: Run tests, build and push dispatcher Docker image
        if: steps.extract_info.outputs.project == 'dispatcher'
        working-directory: hub/dispatcher
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_HUB_KEY }}
          TAG: ${{ steps.extract_info.outputs.version }}
        run: |
          ./gradlew test jib -Pversion=$TAG --image romainfd/dispatcher:$TAG

      - name: Build and push lrm Docker image
        if: steps.extract_info.outputs.project == 'lrm'
        working-directory: web/lrm
        env:
          DOCKERHUB_TOKEN: ${{ secrets.DOCKER_HUB_KEY }}
          TAG: ${{ steps.extract_info.outputs.version }}
        run: |
          docker buildx build --platform linux/amd64 -t romainfd/hub-lrm-back:$TAG .
          docker push romainfd/hub-lrm-back:$TAG
          
          docker buildx build --platform linux/amd64 -t romainfd/hub-lrm-front:$TAG ./client
          docker push romainfd/hub-lrm-front:$TAG